// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
	Not(in=sel[0], out=ns0);
	Not(in=sel[1], out=ns1);
	Not(in=sel[2], out=ns2);

	And(a=in, b=sel[2], out=si2);
	And(a=in, b=ns2, out=nsi2);

	And(a=nsi2, b=ns1, out=nsi2ns1);
	And(a=nsi2, b=sel[1], out=nsi2s1);
	And(a=si2, b=ns1, out=si2ns1);
	And(a=si2, b=sel[1], out=si2s1);
	
	And(a=nsi2ns1, b=ns0, out=a);
	And(a=nsi2ns1, b=sel[0], out=b);
	And(a=nsi2s1, b=ns0, out=c);
	And(a=nsi2s1, b=sel[0], out=d);
	And(a=si2ns1, b=ns0, out=e);
	And(a=si2ns1, b=sel[0], out=f);
	And(a=si2s1, b=ns0, out=g);
	And(a=si2s1, b=sel[0], out=h);
}
